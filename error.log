2024-05-26T16:06:36.153Z [31merror[39m: Expected property name or '}' in JSON at position 4
2024-05-26T16:06:44.785Z [31merror[39m: Unexpected non-whitespace character after JSON at position 67
2024-05-26T16:06:57.855Z [31merror[39m: Unexpected non-whitespace character after JSON at position 64
2024-05-27T13:11:02.189Z [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation in
C:\Users\adity\personal-finance-manager\src\controllers\authController.js:33:36

  30 const { email, password } = req.body;
  31 
  32 try {
â†’ 33   const user = await prisma.user.findUnique({
         where: {
           email: undefined,
       ?   id?: Int,
       ?   AND?: UserWhereInput | UserWhereInput[],
       ?   OR?: UserWhereInput[],
       ?   NOT?: UserWhereInput | UserWhereInput[],
       ?   name?: StringFilter | String,
       ?   password?: StringFilter | String,
       ?   budgets?: BudgetListRelationFilter,
       ?   transactions?: TransactionListRelationFilter
         }
       })

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-05-27T13:12:21.755Z [31merror[39m: Error adding budget for user 2: 
Invalid `prisma.budget.create()` invocation in
C:\Users\adity\personal-finance-manager\src\controllers\budgetController.js:23:40

  20 const { amount, categoryId, startDate, endDate } = req.body;
  21 
  22 try {
â†’ 23   const budget = await prisma.budget.create({
         data: {
           userId: 2,
           amount: undefined,
           categoryId: undefined,
           startDate: new Date("Invalid Date"),
                      ~~~~~~~~~~~~~~~~~~~~~~~~
           endDate: new Date("Invalid Date")
         }
       })

Invalid value for argument `startDate`: Provided Date object is invalid. Expected Date.
2024-05-27T13:13:04.071Z [31merror[39m: Error adding budget for user 2: 
Invalid `prisma.budget.create()` invocation in
C:\Users\adity\personal-finance-manager\src\controllers\budgetController.js:23:40

  20 const { amount, categoryId, startDate, endDate } = req.body;
  21 
  22 try {
â†’ 23   const budget = await prisma.budget.create({
         data: {
           userId: 2,
           amount: undefined,
           categoryId: undefined,
           startDate: new Date("Invalid Date"),
                      ~~~~~~~~~~~~~~~~~~~~~~~~
           endDate: new Date("Invalid Date")
         }
       })

Invalid value for argument `startDate`: Provided Date object is invalid. Expected Date.
